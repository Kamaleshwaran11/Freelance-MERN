[{"C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\index.js":"1","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\reportWebVitals.js":"2","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\App.js":"3","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\context\\GeneralContext.jsx":"4","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\components\\Navbar.jsx":"5","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\Authenticate.jsx":"6","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\Landing.jsx":"7","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\freelancer\\MyProjects.jsx":"8","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\freelancer\\AllProjects.jsx":"9","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\freelancer\\ProjectData.jsx":"10","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\freelancer\\MyApplications.jsx":"11","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\freelancer\\Freelancer.jsx":"12","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\client\\NewProject.jsx":"13","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\client\\Client.jsx":"14","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\client\\ProjectWorking.jsx":"15","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\client\\ProjectApplications.jsx":"16","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\admin\\AdminProjects.jsx":"17","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\admin\\AllUsers.jsx":"18","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\admin\\AllApplications.jsx":"19","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\admin\\Admin.jsx":"20","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\components\\Register.jsx":"21","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\components\\Login.jsx":"22"},{"size":787,"mtime":1729483948130,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1729483948144,"results":"25","hashOfConfig":"24"},{"size":2106,"mtime":1729483948123,"results":"26","hashOfConfig":"24"},{"size":2968,"mtime":1729483948125,"results":"27","hashOfConfig":"24"},{"size":2201,"mtime":1729485781304,"results":"28","hashOfConfig":"24"},{"size":823,"mtime":1729485781332,"results":"29","hashOfConfig":"24"},{"size":1742,"mtime":1729859781717,"results":"30","hashOfConfig":"24"},{"size":2562,"mtime":1729483948142,"results":"31","hashOfConfig":"24"},{"size":3915,"mtime":1729483948139,"results":"32","hashOfConfig":"24"},{"size":10072,"mtime":1729483948143,"results":"33","hashOfConfig":"24"},{"size":2673,"mtime":1729483948141,"results":"34","hashOfConfig":"24"},{"size":5732,"mtime":1729483948140,"results":"35","hashOfConfig":"24"},{"size":2603,"mtime":1729483948137,"results":"36","hashOfConfig":"24"},{"size":2850,"mtime":1729483948136,"results":"37","hashOfConfig":"24"},{"size":7122,"mtime":1729483948138,"results":"38","hashOfConfig":"24"},{"size":5129,"mtime":1729483948137,"results":"39","hashOfConfig":"24"},{"size":3669,"mtime":1729483948135,"results":"40","hashOfConfig":"24"},{"size":1268,"mtime":1729483948135,"results":"41","hashOfConfig":"24"},{"size":3197,"mtime":1729483948135,"results":"42","hashOfConfig":"24"},{"size":2469,"mtime":1729483948134,"results":"43","hashOfConfig":"24"},{"size":2008,"mtime":1729483948124,"results":"44","hashOfConfig":"24"},{"size":1344,"mtime":1729483948123,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9k8fs2",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":2,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\index.js",[],[],"C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\App.js",[],[],"C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\context\\GeneralContext.jsx",["124"],[],"import React, { createContext, useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport socketIoClient from 'socket.io-client';\r\n\r\nexport const GeneralContext = createContext();\r\n\r\nconst GeneralContextProvider = ({children}) => {\r\n\r\n  const WS = 'http://localhost:6001';\r\n\r\n  const socket = socketIoClient(WS);\r\n\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [usertype, setUsertype] = useState('');\r\n \r\n  \r\n  \r\n  \r\n  const login = async () =>{\r\n    try{\r\n      const loginInputs = {email, password}\r\n        await axios.post('http://localhost:6001/login', loginInputs)\r\n        .then( async (res)=>{\r\n\r\n          localStorage.setItem('userId', res.data._id);\r\n            localStorage.setItem('usertype', res.data.usertype);\r\n            localStorage.setItem('username', res.data.username);\r\n            localStorage.setItem('email', res.data.email);\r\n            if(res.data.usertype === 'freelancer'){\r\n                navigate('/freelancer');\r\n            } else if(res.data.usertype === 'client'){\r\n              navigate('/client');\r\n            } else if(res.data.usertype === 'admin'){\r\n                navigate('/admin');\r\n            }\r\n          }).catch((err) =>{\r\n            alert(\"login failed!!\");\r\n            console.log(err);\r\n          });\r\n          \r\n        }catch(err){\r\n          console.log(err);\r\n        }\r\n      }\r\n      \r\n  const inputs = {username, email, usertype, password};\r\n\r\n  const register = async () =>{\r\n    try{\r\n        await axios.post('http://localhost:6001/register', inputs)\r\n        .then( async (res)=>{\r\n            localStorage.setItem('userId', res.data._id);\r\n            localStorage.setItem('usertype', res.data.usertype);\r\n            localStorage.setItem('username', res.data.username);\r\n            localStorage.setItem('email', res.data.email);\r\n\r\n            if(res.data.usertype === 'freelancer'){\r\n              navigate('/freelancer');\r\n          } else if(res.data.usertype === 'client'){\r\n            navigate('/client');\r\n          } else if(res.data.usertype === 'admin'){\r\n              navigate('/admin');\r\n          }\r\n \r\n        }).catch((err) =>{\r\n            alert(\"registration failed!!\");\r\n            console.log(err);\r\n        });\r\n    }catch(err){\r\n        console.log(err);\r\n    }\r\n  }\r\n\r\n\r\n  const logout = async () =>{\r\n    \r\n    localStorage.clear();\r\n    for (let key in localStorage) {\r\n      if (localStorage.hasOwnProperty(key)) {\r\n        localStorage.removeItem(key);\r\n      }\r\n    }\r\n    \r\n    navigate('/');\r\n  }\r\n\r\n\r\n  return (\r\n    <GeneralContext.Provider value={{socket, login, register, logout, username, setUsername, email, setEmail, password, setPassword, usertype, setUsertype}} >{children}</GeneralContext.Provider>\r\n  )\r\n}\r\n\r\nexport default GeneralContextProvider","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\components\\Navbar.jsx",["125","126","127"],[],"import React, { useContext, useEffect, useState } from 'react'\r\nimport '../styles/navbar.css'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { GeneralContext } from '../context/GeneralContext';\r\n\r\nconst Navbar = () => {\r\n\r\n\r\n  const userId = localStorage.getItem('userId');\r\n\r\n  const usertype = localStorage.getItem('usertype');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const {logout} = useContext(GeneralContext);\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {usertype === 'freelancer' ?\r\n          <div className=\"navbar\">\r\n            <h3>IKAC Works</h3>\r\n    \r\n            <div className=\"nav-options\">\r\n                <p onClick={()=> navigate('/freelancer')} >Dashboard</p>\r\n                <p onClick={()=> navigate('/all-projects')} >All Projects</p>\r\n                <p onClick={()=> navigate('/my-projects')} >My Projects</p>\r\n                <p onClick={()=> navigate('/myApplications')} >Applications</p>\r\n                <p onClick={()=> logout()} >Logout</p>\r\n            </div>\r\n          </div>\r\n      :\r\n      \r\n      \"\"}\r\n      \r\n      {\r\n        usertype === 'client' ?\r\n          <div className=\"navbar\">\r\n            <h3>IKAC Works</h3>\r\n\r\n            <div className=\"nav-options\">\r\n                <p onClick={()=> navigate('/client')} >Dashboard</p>\r\n                <p onClick={()=> navigate('/new-project')} >New Project</p>\r\n                <p onClick={()=> navigate('/project-applications')} >Applications</p>\r\n                <p onClick={()=> logout()}>Logout</p>\r\n            </div>\r\n          </div>\r\n        :\r\n        \"\"\r\n      }\r\n\r\n      \r\n      {usertype === 'admin' ?\r\n          <div className=\"navbar\">\r\n            <h3>IKAC Works (admin)</h3>\r\n    \r\n            <div className=\"nav-options\">\r\n                <p onClick={()=> navigate('/admin')} >Home</p>\r\n                <p onClick={()=> navigate('/all-users')} >All users</p>\r\n                <p onClick={()=> navigate('/admin-projects')} >Projects</p>\r\n                <p onClick={()=> navigate('/admin-applications')} >Applications</p>\r\n                <p onClick={()=> logout()}>Logout</p>\r\n            </div>\r\n          </div>\r\n      : \"\"}\r\n\r\n      \r\n\r\n    </>\r\n    \r\n\r\n    \r\n  )\r\n}\r\n\r\nexport default Navbar","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\Authenticate.jsx",[],[],"C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\Landing.jsx",["128","129","130"],[],"import React, { useEffect } from 'react'\r\nimport '../styles/landing.css'\r\nimport {PiStudent} from 'react-icons/pi'\r\nimport {FaHandHoldingWater} from 'react-icons/fa'\r\nimport {MdHealthAndSafety} from 'react-icons/md'\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\nconst Landing = () => {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(()=>{\r\n    if (localStorage.getItem(\"usertype\") === 'freelancer'){\r\n      navigate(\"/freelancer\")\r\n    } else if (localStorage.getItem(\"usertype\") === 'client'){\r\n      navigate(\"/client\")\r\n    } else if (localStorage.getItem(\"usertype\") === 'admin'){\r\n      navigate(\"/admin\")\r\n    }\r\n  })\r\n\r\n\r\n  return (\r\n    <div className=\"landing-page\">\r\n\r\n        <div className=\"landing-hero\">\r\n\r\n            <div className='landing-nav'>\r\n              <h3>IKAC Works</h3>\r\n              <button onClick={()=> navigate('/authenticate')} >Sign In</button>\r\n            </div>\r\n\r\n            <div className=\"landing-hero-text\">\r\n\r\n                <h1>\"Why Choose Us? Empowering Freelancers to Land the Jobs They Deserve with IKAC Works\"</h1>\r\n                <p>Unlock a world of opportunity with IKAC Works, where your talent meets the perfect projects. Here, you’ll connect with clients who value expertise, tackle inspiring challenges, and build a legacy that reflects your skills and passion. From expanding your portfolio to accessing global projects, IKAC Works empowers you to work freely and create your path to success. Dive into a marketplace where innovation meets opportunity, and let your freelancing journey truly begin. </p>\r\n                <button onClick={()=> navigate('/authenticate')}>Join Now</button>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Landing","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\freelancer\\MyProjects.jsx",["131"],[],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport '../../styles/freelancer/MyProjects.css'\r\n\r\nconst MyProjects = () => {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  const [displayProjects, setDisplayProjects] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    fetchProjects();\r\n  },[])\r\n\r\n  const fetchProjects = async()=>{\r\n    await axios.get('http://localhost:6001/fetch-projects').then(\r\n      (response)=>{\r\n        const pros = response.data.filter(pro=> pro.freelancerId === localStorage.getItem('userId'));\r\n        setProjects(pros);\r\n        setDisplayProjects(pros.reverse());\r\n      }\r\n    ).catch((err)=>{\r\n      console.log(err);\r\n      fetchProjects();\r\n    })\r\n  }\r\n\r\n\r\n\r\nconst handleFilterChange = (data) =>{\r\n  if(data === \"\"){\r\n    setDisplayProjects(projects.reverse());\r\n  } else  if(data === \"In Progress\"){\r\n    setDisplayProjects(projects.filter((project)=> project.status === \"Assigned\").reverse());\r\n  } else  if(data === \"Completed\"){\r\n    setDisplayProjects(projects.filter((project)=> project.status === \"Completed\").reverse());\r\n  }\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"client-projects-page\">\r\n\r\n      <div className=\"client-projects-list\">\r\n        <div className=\"client-projects-header\">\r\n              <h3>My projects</h3>\r\n                <select className='form-control' placeholder='Project status' onChange={(e)=> handleFilterChange(e.target.value)} >\r\n                  <option value=\"\">Choose project status</option>\r\n                  <option value=\"In Progress\">In Progress</option>\r\n                  <option value=\"Completed\">Completed</option>\r\n                </select>\r\n\r\n        </div>\r\n        <hr />\r\n\r\n        {\r\n          displayProjects.map((project)=>(\r\n            <div className=\"listed-project\" key={project._id} onClick={()=> navigate(`/project/${project._id}`)}>\r\n              <div className='listed-project-head'>\r\n                  <h3>{project.title}</h3>\r\n                  <p>{project.postedDate}</p>\r\n              </div>\r\n              <h5>Budget -  &#8377; {project.budget}</h5>\r\n              <p>{project.description}</p>\r\n    \r\n              <div className=\"bids-data\">\r\n                {/* <p>Applications - {project.applications.length}</p> */}\r\n                <h6>Status - {project.status} </h6>\r\n              </div>\r\n              <hr />\r\n            </div>\r\n          ))\r\n        }\r\n        \r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyProjects","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\freelancer\\AllProjects.jsx",["132","133","134","135","136"],[],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport '../../styles/freelancer/AllProjects.css' \r\n\r\nconst AllProjects = () => {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  const [displayprojects, setDisplayProjects] = useState([]);\r\n\r\n  const [allSkills, setAllSkills] = useState([]); \r\n\r\n  useEffect(()=>{\r\n    fetchProjects();\r\n  },[])\r\n\r\n  const fetchProjects = async()=>{\r\n    await axios.get('http://localhost:6001/fetch-projects').then(\r\n      (response)=>{\r\n          setProjects(response.data);\r\n          setDisplayProjects(response.data.reverse());\r\n\r\n          response.data.map((project)=>{\r\n            project.skills.map((skill)=>{\r\n              if(!allSkills.includes(skill)){\r\n                allSkills.push(skill); \r\n              }\r\n            })\r\n          })\r\n      }\r\n    ).catch((err)=>{\r\n      console.log(err);\r\n      fetchProjects();\r\n    })\r\n  }\r\n\r\n\r\n  const [categoryFilter, setCategoryFilter] = useState([]);\r\n\r\n  const handleCategoryCheckBox = (e) =>{\r\n    const value = e.target.value;\r\n    if(e.target.checked){\r\n      setCategoryFilter([...categoryFilter, value]);\r\n    }else{\r\n        setCategoryFilter(categoryFilter.filter(size=> size !== value));\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n\r\n\r\n    if (categoryFilter.length > 0){\r\n        setDisplayProjects(projects.filter(project => categoryFilter.every(skill => project.skills.includes(skill))).reverse());\r\n    }else{\r\n        setDisplayProjects(projects.reverse());\r\n    }\r\n\r\n\r\n}, [categoryFilter])\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      {projects ?\r\n      \r\n          <div className=\"all-projects-page\">\r\n\r\n            \r\n\r\n            <div className=\"project-filters\">\r\n\r\n              <h3>Filters</h3>\r\n              <hr />\r\n\r\n              <div className=\"filters\">\r\n                <h5>Skills</h5>\r\n\r\n                {allSkills.length > 0 ? \r\n                \r\n                    <div className=\"filter-options\">\r\n\r\n                        {allSkills.map((skill)=>(\r\n                          <div className=\"form-check\" key={skill}>\r\n                            <input className=\"form-check-input\" type=\"checkbox\" value={skill} id=\"flexCheckDefault\" onChange={handleCategoryCheckBox} />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">{skill}</label>\r\n                          </div>\r\n                        ))}\r\n\r\n                    </div>\r\n                :\"\"}\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"projects-list\">\r\n\r\n              <h3>All projects</h3>\r\n              <hr />\r\n\r\n              {displayprojects.map((project)=>(\r\n\r\n                  <div className=\"listed-project\" key={project._id} onClick={()=> navigate(`/project/${project._id}`)} >\r\n                    <div className='listed-project-head'>\r\n                        <h3>{project.title}</h3>\r\n                        <p>{String(project.postedDate).slice(0,24)}</p>\r\n                    </div>\r\n                    <h5>Budget &#8377; {project.budget}</h5>\r\n                    <p>{project.description}</p>\r\n                    <div className=\"skills\">\r\n                      {\r\n                        project.skills.map((skill)=>(\r\n                          <h6 key={skill} >{skill}</h6>\r\n                        ))\r\n                      }\r\n                    </div>\r\n\r\n                    <div className=\"bids-data\">\r\n                      <p>{project.bids.length} bids</p>\r\n                      <h6>&#8377; {project.bids.length > 0 ? project.bidAmounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0) : 0} (avg bid)</h6>\r\n                    </div>\r\n                    <hr />\r\n                  </div>\r\n              ))}\r\n\r\n\r\n            </div>\r\n\r\n          </div>\r\n      :\"\"}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AllProjects","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\freelancer\\ProjectData.jsx",["137","138","139","140"],[],"import React, { useContext, useEffect, useState } from 'react'\r\nimport {useParams} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../../styles/freelancer/ProjectData.css'\r\nimport { GeneralContext } from '../../context/GeneralContext';\r\n\r\n\r\nconst ProjectData = () => {\r\n\r\n  const {socket} = useContext(GeneralContext);\r\n\r\n  const params = useParams();\r\n\r\n  console.log(params['id']);\r\n\r\n  const [project, setProject] = useState()\r\n\r\n  useEffect(()=>{\r\n    fetchProject(params['id']);\r\n\r\n    joinSocketRoom();\r\n\r\n  },[])\r\n\r\n\r\n  \r\n  const joinSocketRoom = async() =>{\r\n    \r\n    await socket.emit(\"join-chat-room\", {projectId: params['id'], freelancerId: localStorage.getItem(\"userId\")});\r\n  }\r\n\r\n\r\n  // useEffect(()=>{\r\n  //   socket.on(\"user-joined-room\", ()=>{\r\n  //   })\r\n  // },[socket])\r\n\r\n\r\n  const fetchProject = async(id) =>{\r\n    await axios.get(`http://localhost:6001/fetch-project/${id}`).then(\r\n      (response)=>{\r\n        setProject(response.data);\r\n        setProjectId(response.data._id);\r\n        setClientId(response.data.clientId);\r\n        console.log(response.data);\r\n      }\r\n    ).catch((err)=>{\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n\r\n\r\n    const [clientId, setClientId] = useState('');\r\n    const [freelancerId, setFreelancerId] = useState(localStorage.getItem('userId'));\r\n    const [projectId, setProjectId] = useState(params['id']);\r\n    const [proposal, setProposal] = useState('');\r\n    const [bidAmount, setBidAmount] = useState(0);\r\n    const [estimatedTime, setEstimatedTime] = useState('');\r\n\r\n    const handleBidding = async() =>{\r\n\r\n      await axios.post(\"http://localhost:6001/make-bid\", {clientId, freelancerId, projectId, proposal, bidAmount, estimatedTime}).then(\r\n        (response)=>{\r\n            setProposal('');\r\n            setBidAmount(0);\r\n            setEstimatedTime(0);\r\n            alert(\"Bidding successful!!\");\r\n        }\r\n      ).catch((err)=>{\r\n        alert(\"Bidding failed!! Try again!\");\r\n      })\r\n\r\n    }\r\n\r\n\r\n    const [projectLink, setProjectLink] = useState('');\r\n    const [manualLink, setManualLink] = useState('');\r\n    const [submissionDescription, setSubmissionDescription] = useState('');\r\n\r\n\r\n    const handleProjectSubmission = async() =>{\r\n\r\n      await axios.post(\"http://localhost:6001/submit-project\", {clientId, freelancerId, projectId, projectLink, manualLink, submissionDescription}).then(\r\n        (response)=>{\r\n            setProjectLink('');\r\n            setManualLink('');\r\n            setSubmissionDescription('');\r\n            alert(\"submission successful!!\");\r\n        }\r\n      ).catch((err)=>{\r\n        alert(\"submission failed!! Try again!\");\r\n      })\r\n\r\n    }\r\n\r\n\r\n\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleMessageSend = async() =>{\r\n      socket.emit(\"new-message\", {projectId: params['id'], senderId: localStorage.getItem(\"userId\"), message, time: new Date()});\r\n      fetchChats();\r\n      setMessage(\"\");\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n      fetchChats();\r\n    },[])\r\n\r\n    const [chats, setChats] = useState();\r\n    const fetchChats = async() =>{\r\n      await axios.get(`http://localhost:6001/fetch-chats/${params['id']}`).then(\r\n        (response) =>{\r\n          setChats(response.data);\r\n        }\r\n      )\r\n    }\r\n\r\n    useEffect(()=>{\r\n      socket.on(\"message-from-user\", ()=>{\r\n        fetchChats();\r\n      })\r\n    },[socket])\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      {project ?\r\n      \r\n        <div className=\"project-data-page\">\r\n\r\n            <div className=\"project-data-container\">\r\n\r\n                <div className=\"project-data\">\r\n\r\n                      <h3>{project.title}</h3>\r\n                      <p>{project.description}</p>\r\n                      <span>\r\n                        <h5>Required skills</h5>\r\n                        <div className=\"required-skills\">\r\n                          {project.skills.map((skill)=>(\r\n                            <p key={skill}>{skill}</p>\r\n                          ))}\r\n                        </div>\r\n                      </span>\r\n                      <span>\r\n                        <h5>Budget</h5>\r\n                        <h6>&#8377; {project.budget}</h6>\r\n                      </span>\r\n\r\n                </div>\r\n\r\n                {/* Freelancer proposal */}\r\n\r\n                {project.status === \"Available\"  ?\r\n\r\n                <div className=\"project-form-body\">\r\n                  <h4>Send proposal</h4>\r\n                  <span>\r\n                      <div className=\"form-floating\">\r\n                        <input type=\"number\" className=\"form-control mb-3\" id=\"floatingPassword\" placeholder=\"Password\" value={bidAmount} onChange={(e)=>setBidAmount(e.target.value)} />\r\n                        <label htmlFor=\"floatingPassword\">Budget</label>\r\n                      </div>\r\n                      <div className=\"form-floating\">\r\n                        <input type=\"number\" className=\"form-control mb-3\" id=\"floatingPassword\" placeholder=\"Password\" value={estimatedTime} onChange={(e)=>setEstimatedTime(e.target.value)} />\r\n                        <label htmlFor=\"floatingPassword\">Estimated time (days)</label>\r\n                      </div>\r\n                  </span>\r\n                  <div className=\"form-floating\">\r\n                        <textarea className=\"form-control mb-3\" id=\"floatingPassword\" placeholder=\"Password\" value={proposal} onChange={(e)=>setProposal(e.target.value)}/>\r\n                        <label htmlFor=\"floatingPassword\">Describe your proposal</label>\r\n                  </div>\r\n                  \r\n                  {!project.bids.includes(localStorage.getItem('userId'))  ? <button className='btn btn-success' onClick={handleBidding} >Post Bid</button> :\"\"}\r\n                  {project.bids.includes(localStorage.getItem('userId'))  ? <button className='btn btn-primary' disabled >Already bidded</button> :\"\"}\r\n                </div>\r\n\r\n                : \"\"}\r\n\r\n                {project.freelancerId === localStorage.getItem('userId') ?\r\n                \r\n                  <div className=\"project-form-body\">\r\n\r\n                      <h4>Submit the project</h4>\r\n\r\n                      {project.submissionAccepted ?\r\n                        <p>Project completed</p>\r\n                      :\r\n                      \r\n                        <>\r\n                              <div className=\"form-floating\">\r\n                                  <input type=\"text\" className=\"form-control mb-3\" id=\"floatingPassword\" placeholder=\"Password\" value={projectLink} onChange={(e)=> setProjectLink(e.target.value)} />\r\n                                  <label htmlFor=\"floatingPassword\">Project link</label>\r\n                              </div>\r\n\r\n                              <div className=\"form-floating\">\r\n                                  <input type=\"text\" className=\"form-control mb-3\" id=\"floatingPassword\" placeholder=\"Password\" value={manualLink} onChange={(e)=> setManualLink(e.target.value)} />\r\n                                  <label htmlFor=\"floatingPassword\">Manual link</label>\r\n                              </div>\r\n\r\n                              <div className=\"form-floating\">\r\n                                  <textarea className=\"form-control mb-3\" id=\"floatingPassword\" placeholder=\"Password\" value={submissionDescription} onChange={(e)=> setSubmissionDescription(e.target.value)} />\r\n                                  <label htmlFor=\"floatingPassword\">Describe your work</label>\r\n                            </div>\r\n                            \r\n                                                  {project.submission ?\r\n                                                   \r\n                                                   <button className=\"btn btn-secondary\" disabled >Already submitted</button>\r\n                              \r\n                                                  :\r\n                                                  \r\n                                                    <button className=\"btn btn-success\" onClick={handleProjectSubmission} >Submit project</button>\r\n                                                  }\r\n                        </>\r\n                      }\r\n\r\n\r\n\r\n                  </div>\r\n                :\"\"}\r\n\r\n\r\n            </div>\r\n\r\n            <div className=\"project-chat-container\">\r\n\r\n                <h4>Chat with the client</h4>\r\n                <hr />\r\n\r\n                {project.freelancerId === localStorage.getItem('userId') ?\r\n                \r\n                    <div className=\"chat-body\">\r\n\r\n                      {chats ? \r\n\r\n                          <div className=\"chat-messages\">\r\n\r\n                            {chats.messages.map((message)=>(\r\n\r\n                                <div className={message.senderId === localStorage.getItem(\"userId\") ? \"my-message\": \"received-message\"} key={message.id}>\r\n                                  <div>\r\n                                      {/* {message.senderId === localStorage.getItem(\"userId\") ? \"\"\r\n                                        : <h5>Client</h5>} */}\r\n                                      <p>{message.text}</p>\r\n                                      <h6>{message.time.slice(5,10)} - {message.time.slice(11,19)}</h6>\r\n                                  </div>\r\n                                </div>\r\n                            ))}\r\n                            \r\n\r\n\r\n                          </div>\r\n                      \r\n                      :\"\"}\r\n\r\n                        <hr />\r\n                        <div className=\"chat-input\">\r\n                          <input type=\"text\" className='form-control' placeholder='Enter something...' value={message} onChange={(e)=> setMessage(e.target.value)} />\r\n                          <button onClick={handleMessageSend} >Send</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                :\r\n                <i style={{color: '#938f8f'}} >Chat will be enabled if the project is assigned to you!!</i>\r\n                }\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n      :\"\"}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProjectData","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\freelancer\\MyApplications.jsx",[],[],"C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\freelancer\\Freelancer.jsx",[],[],"C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\client\\NewProject.jsx",[],[],"C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\client\\Client.jsx",["141","142","143"],[],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport '../../styles/client/client.css'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst Client = () => {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  const [displayProjects, setDisplayProjects] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    fetchProjects();\r\n  },[])\r\n\r\n  const fetchProjects = async()=>{\r\n    await axios.get('http://localhost:6001/fetch-projects').then(\r\n      (response)=>{\r\n          let pros = response.data.filter(pro => pro.clientId === localStorage.getItem('userId'));\r\n          setProjects(pros);\r\n          setDisplayProjects(pros.reverse());\r\n      }\r\n    ).catch((err)=>{\r\n      console.log(err);\r\n      fetchProjects();\r\n    })\r\n  }\r\n\r\n\r\n  const [filterProject, setFilterProject] = useState('');\r\n\r\n  const handleFilterChange = (data) =>{\r\n    if(data === \"\"){\r\n      setDisplayProjects(projects);\r\n    } else  if(data === \"Un Assigned\"){\r\n      setDisplayProjects(projects.filter((project)=> project.status === \"Available\").reverse());\r\n    } else  if(data === \"In Progress\"){\r\n      setDisplayProjects(projects.filter((project)=> project.status === \"Assigned\").reverse());\r\n    } else  if(data === \"Completed\"){\r\n      setDisplayProjects(projects.filter((project)=> project.status === \"Completed\").reverse());\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"client-projects-page\">\r\n\r\n      <div className=\"client-projects-list\">\r\n        <div className=\"client-projects-header\">\r\n              <h3>My projects</h3>\r\n                <select className='form-control' placeholder='Project status' onChange={(e)=> handleFilterChange(e.target.value)} >\r\n                  <option value=\"\">Choose project status</option>\r\n                  <option value=\"Un Assigned\">Un Assigned</option>\r\n                  <option value=\"In Progress\">In Progress</option>\r\n                  <option value=\"Completed\">Completed</option>\r\n                </select>\r\n\r\n        </div>\r\n        <hr />\r\n\r\n        {\r\n          displayProjects.map((project)=>(\r\n            <div className=\"listed-project\" key={project._id} onClick={()=> navigate(`/client-project/${project._id}`)}>\r\n              <div className='listed-project-head'>\r\n                  <h3>{project.title}</h3>\r\n                  <p>{String(project.postedDate).slice(0,25)}</p>\r\n              </div>\r\n              <h5>Budget -  &#8377; {project.budget}</h5>\r\n              <p>{project.description}</p>\r\n    \r\n              <div className=\"bids-data\">\r\n                {/* <p>Applications - {project.applications.length}</p> */}\r\n                <h6>Status - {project.status} </h6>\r\n              </div>\r\n              <hr />\r\n            </div>\r\n          ))\r\n        }\r\n        \r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Client","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\client\\ProjectWorking.jsx",["144","145","146","147","148","149","150","151"],[],"import React, { useContext, useEffect, useState } from 'react'\r\nimport '../../styles/client/ProjectWorking.css'\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { GeneralContext } from '../../context/GeneralContext';\r\n\r\nconst ProjectWorking = () => {\r\n\r\n  const {socket} = useContext(GeneralContext);\r\n\r\n\r\n  const params = useParams();\r\n\r\n  console.log(params['id']);\r\n\r\n  const [project, setProject] = useState();\r\n  const [clientId, setClientId] = useState(localStorage.getItem('userId'));\r\n  const [projectId, setProjectId] = useState(params['id']);\r\n\r\n  useEffect(()=>{\r\n    fetchProject(params['id']);\r\n\r\n    joinSocketRoom();\r\n\r\n  },[])\r\n\r\n\r\n  \r\n  const joinSocketRoom = async() =>{\r\n     \r\n    await socket.emit(\"join-chat-room\", {projectId: params['id'], freelancerId: \"\"});\r\n  }\r\n\r\n\r\n  // useEffect(()=>{\r\n  //   socket.on(\"user-joined-room\", ()=>{\r\n  //     console.log(\"roo\", socket.rooms)\r\n  //   })\r\n  // },[socket])\r\n\r\n  useEffect(()=>{\r\n    fetchProject(params['id']);\r\n  },[])\r\n\r\n  const fetchProject = async(id) =>{\r\n    await axios.get(`http://localhost:6001/fetch-project/${id}`).then(\r\n      (response)=>{\r\n        setProject(response.data);\r\n        setProjectId(response.data._id);\r\n        setClientId(response.data.clientId);\r\n        console.log(response.data);\r\n      }\r\n    ).catch((err)=>{\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n\r\n  const handleApproveSubmission = async() =>{\r\n    await axios.get(`http://localhost:6001/approve-submission/${params['id']}`).then(\r\n      (response)=>{\r\n        fetchProject(params['id']);\r\n        alert(\"Submission approved!!\");\r\n      }\r\n    ).catch((err)=>{\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  const handleRejectSubmission = async() =>{\r\n    await axios.get(`http://localhost:6001/reject-submission/${params['id']}`).then(\r\n      (response)=>{\r\n        fetchProject(params['id']);\r\n        alert(\"Submission rejected!!\");\r\n      }\r\n    ).catch((err)=>{\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n\r\n  \r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleMessageSend = async() =>{\r\n    socket.emit(\"new-message\", {projectId: params['id'], senderId: localStorage.getItem(\"userId\"), message, time: new Date()})\r\n    setMessage(\"\");\r\n    fetchChats();\r\n  }\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    fetchChats();\r\n  },[])\r\n\r\n  const [chats, setChats] = useState();\r\n  const fetchChats = async() =>{\r\n    await axios.get(`http://localhost:6001/fetch-chats/${params['id']}`).then(\r\n      (response) =>{\r\n        setChats(response.data);\r\n      }\r\n    )\r\n  }\r\n\r\n  useEffect(()=>{\r\n    socket.on(\"message-from-user\", ()=>{\r\n      fetchChats();\r\n    })\r\n  },[socket])\r\n\r\n  return (\r\n\r\n    <>\r\n    {project ? \r\n    \r\n      <div className=\"project-data-page\">\r\n\r\n          <div className=\"project-data-container\">\r\n\r\n              <div className=\"project-data\">\r\n\r\n                    <h3>{project.title}</h3>\r\n                    <p>{project.description}</p>\r\n                    <span>\r\n                      <h5>Required skills</h5>\r\n                      <div className=\"required-skills\">\r\n                          {project.skills.map((skill)=>(\r\n                            <p key={skill}>{skill}</p>\r\n                          ))}\r\n                      </div>\r\n                    </span>\r\n                    <span>\r\n                      <h5>Budget</h5>\r\n                      <h6>&#8377; {project.budget}</h6>\r\n                    </span>\r\n\r\n              </div>\r\n\r\n              {project.freelancerId && project.freelancerId !== \"\"   ?\r\n              \r\n              <div className=\"project-submissions-container\">\r\n\r\n                  <h4>Submission</h4>\r\n\r\n                  <div className=\"project-submissions\">\r\n\r\n                      {project.submission ? \r\n                      \r\n                        <div className=\"project-submission\">\r\n\r\n                              <span>\r\n                                <h5>Project Link: </h5>\r\n                                <a href={project.projectLink} target='_blank' >{project.projectLink}</a>\r\n                              </span>\r\n\r\n                              <span>\r\n                                <h5>Manual Link: </h5>\r\n                                <a href={project.manulaLink} target='_blank'>{project.manulaLink}</a>\r\n                              </span>\r\n\r\n                              \r\n                                <h5>Description for work</h5>\r\n                                <p>{project.submissionDescription}</p>\r\n                            \r\n                              {project.submissionAccepted ?\r\n                                <h5 style={{color: \"green\"}} >project completed!!</h5>\r\n                              :\r\n                              \r\n                                <div className=\"submission-btns\">\r\n                                  <button className='btn btn-success' onClick={handleApproveSubmission} >Approve </button>\r\n                                  <button className='btn btn-danger' onClick={handleRejectSubmission} >Reject</button>\r\n                                </div>\r\n                              }\r\n\r\n                        </div>\r\n                      :\r\n                      <p>No submissions yet!!</p>\r\n                      }\r\n\r\n\r\n                  </div>\r\n\r\n              </div>\r\n              :\"\"}\r\n\r\n\r\n\r\n\r\n          </div>\r\n\r\n\r\n\r\n          <div className=\"project-chat-container\">\r\n\r\n              <h4>Chat with the Freelancer</h4>\r\n              <hr />\r\n\r\n              {project.freelancerId ?\r\n                \r\n                    <div className=\"chat-body\">\r\n\r\n                        {chats ? \r\n\r\n                        <div className=\"chat-messages\">\r\n\r\n                          {chats.messages.map((message)=>(\r\n\r\n                              <div className={message.senderId === localStorage.getItem(\"userId\") ? \"my-message\": \"received-message\"} key={message.id}>\r\n                                <div>\r\n                                    {/* {message.senderId === localStorage.getItem(\"userId\") ? \"\"\r\n                                      : <h5>Client</h5>} */}\r\n                                    <p>{message.text}</p>\r\n                                    <h6>{message.time.slice(5,10)} - {message.time.slice(11,19)}</h6>\r\n                                </div>\r\n                              </div>\r\n                          ))}\r\n                          \r\n\r\n                        </div>\r\n\r\n                        :\"\"}\r\n\r\n\r\n                        <hr />\r\n                        <div className=\"chat-input\">\r\n                          <input type=\"text\" className='form-control' placeholder='Enter something...' value={message} onChange={(e)=> setMessage(e.target.value)} />\r\n                          <button onClick={handleMessageSend} >Send</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                :\r\n                <i style={{color: '#938f8f'}} >Chat will be enabled if the project is assigned to you!!</i>\r\n                }\r\n\r\n          </div>\r\n\r\n      </div>\r\n    :\"\"}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProjectWorking","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\client\\ProjectApplications.jsx",["152","153","154","155"],[],"import React, { useEffect, useState } from 'react'\r\nimport '../../styles/client/ClientApplications.css'\r\nimport axios from 'axios';\r\n\r\nconst ProjectApplications = () => {\r\n\r\n  const [applications, setApplications] = useState([]);\r\n  const [displayApplications, setDisplayApplications] = useState([]);\r\n\r\n  const [projectTitles, setProjectTitles] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    fetchApplications();\r\n  },[])\r\n\r\n  const fetchApplications = async() =>{\r\n    await axios.get(\"http://localhost:6001/fetch-applications\").then(\r\n      (response)=>{\r\n        setApplications(response.data.filter((application)=> application.clientId === localStorage.getItem('userId')));\r\n        setDisplayApplications(response.data.filter((application)=> application.clientId === localStorage.getItem('userId')).reverse());\r\n\r\n      }\r\n    ).catch((err)=>{\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(applications.length > 0){\r\n      applications.map((application)=> {projectTitles.includes(application.title) ? setProjectTitles([...projectTitles]) :setProjectTitles([...projectTitles, application.title])});\r\n    }\r\n  },[applications])\r\n\r\n  useEffect(()=>{\r\n    if(projectTitles.length > 0){\r\n      projectTitles.filter((title)=> !projectTitles.includes(title));\r\n    }\r\n  },[projectTitles])\r\n\r\n  const handleApprove = async(id)=>{\r\n    await axios.get(`http://localhost:6001/approve-application/${id}`).then(\r\n      (response)=>{\r\n        alert(\"Application approved\");\r\n        fetchApplications();\r\n      }\r\n    ).catch((err)=>{\r\n      alert(\"Operation failed!!\");\r\n    })\r\n  }\r\n\r\n  const handleReject = async(id)=>{\r\n    await axios.get(`http://localhost:6001/reject-application/${id}`).then(\r\n      (response)=>{\r\n        alert(\"Application rejected!!\");\r\n        fetchApplications();\r\n      }\r\n    ).catch((err)=>{\r\n      alert(\"Operation failed!!\");\r\n    })\r\n  }\r\n\r\n\r\n  const [projectFilter, setProjectFilter] = useState('');\r\n\r\n\r\n  const handleFilterChange = (value) =>{\r\n    if(value === ''){\r\n        setDisplayApplications(applications.reverse());\r\n    }else{\r\n      setDisplayApplications(applications.filter((application)=>application.title === value).reverse())\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"client-applications-page\">\r\n    \r\n    {projectTitles ?\r\n      <span>\r\n          <h3>Applications</h3>\r\n\r\n          <select className='form-control' onChange={(e)=> handleFilterChange(e.target.value)}>\r\n            <option value=\"\">All Projects</option>\r\n            {projectTitles.map((title)=>(\r\n             <option key={title} value={title}>{title}</option>\r\n            ))}\r\n          </select>\r\n\r\n      </span>\r\n    :\"\"}\r\n\r\n    <div className=\"client-applications-body\">\r\n\r\n\r\n        {displayApplications.map((application)=>(\r\n\r\n            <div className=\"client-application\" key={application._id}>\r\n\r\n                <div className=\"client-application-body\">\r\n\r\n                    <div className=\"client-application-half\">\r\n\r\n                          <h4>{application.title}</h4>\r\n                          <p>{application.description}</p>\r\n                          <span>\r\n                            <h5>Skills</h5>\r\n                            <div className=\"application-skills\">\r\n                              {application.requiredSkills.map((skill)=>(\r\n                                <p key={skill}>{skill}</p>\r\n                              ))}\r\n                            </div>\r\n                          </span>\r\n                          <h6>Budget - &#8377; {application.budget}</h6>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"vertical-line\"></div>\r\n\r\n                    <div className=\"client-application-half\"> \r\n\r\n                        <span>\r\n                          <h5>Proposal</h5>\r\n                          <p>{application.proposal}</p>\r\n                        </span>\r\n                        <span>\r\n                            <h5>Skills</h5>\r\n                            <div className=\"application-skills\">\r\n                            {application.freelancerSkills.map((skill)=>(\r\n                                <p key={skill} >{skill}</p>\r\n                              ))}\r\n                            </div>\r\n                        </span>\r\n                        <h6>Proposed Budget - &#8377; {application.bidAmount}</h6>\r\n                        <div className=\"approve-btns\">\r\n                          {application.status === 'Pending' ?\r\n                          <>\r\n                              <button className=\"btn btn-success\" onClick={()=> handleApprove(application._id)} >Approve</button>\r\n                              <button className=\"btn btn-danger\" onClick={()=> handleReject(application._id)} >Decline</button>\r\n                          </>\r\n                          :\r\n                            <h6>Status: <b>{application.status}</b></h6>    \r\n                          }\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                  <hr />\r\n            </div>\r\n        ))}\r\n\r\n    </div>\r\n\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default ProjectApplications","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\admin\\AdminProjects.jsx",["156","157","158","159","160","161"],[],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport '../../styles/freelancer/AllProjects.css' \r\n\r\n\r\nconst AdminProjects = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  const [displayprojects, setDisplayProjects] = useState([]);\r\n\r\n  const [allSkills, setAllSkills] = useState([]); \r\n\r\n  useEffect(()=>{\r\n    fetchProjects();\r\n  },[])\r\n\r\n  const fetchProjects = async()=>{\r\n    await axios.get('http://localhost:6001/fetch-projects').then(\r\n      (response)=>{\r\n          setProjects(response.data);\r\n          setDisplayProjects(response.data.reverse());\r\n\r\n          response.data.map((project)=>{\r\n            project.skills.map((skill)=>{\r\n              if(!allSkills.includes(skill)){\r\n                allSkills.push(skill); \r\n              }\r\n            })\r\n          })\r\n      }\r\n    ).catch((err)=>{\r\n      console.log(err);\r\n      fetchProjects();\r\n    })\r\n  }\r\n\r\n\r\n  const [categoryFilter, setCategoryFilter] = useState([]);\r\n\r\n  const handleCategoryCheckBox = (e) =>{\r\n    const value = e.target.value;\r\n    if(e.target.checked){\r\n      setCategoryFilter([...categoryFilter, value]);\r\n    }else{\r\n        setCategoryFilter(categoryFilter.filter(size=> size !== value));\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n\r\n\r\n    if (categoryFilter.length > 0){\r\n        setDisplayProjects(projects.filter(project => categoryFilter.every(skill => project.skills.includes(skill))).reverse());\r\n    }else{\r\n        setDisplayProjects(projects.reverse());\r\n    }\r\n\r\n\r\n}, [categoryFilter])\r\n\r\n\r\n  return (\r\n    <div className=\"all-projects-page\">\r\n\r\n      <div className=\"project-filters\">\r\n\r\n        <h3>Filters</h3>\r\n        <hr />\r\n\r\n        <div className=\"filters\">\r\n          <h5>Skills</h5>\r\n\r\n          {allSkills.length > 0 ? \r\n          \r\n              <div className=\"filter-options\">\r\n\r\n                  {allSkills.map((skill)=>(\r\n                    <div className=\"form-check\" key={skill}>\r\n                      <input className=\"form-check-input\" type=\"checkbox\" value={skill} id=\"flexCheckDefault\" onChange={handleCategoryCheckBox} />\r\n                      <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">{skill}</label>\r\n                    </div>\r\n                  ))}\r\n\r\n              </div>\r\n          :\"\"}\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className=\"projects-list\">\r\n\r\n        <h3>All projects</h3>\r\n        <hr />\r\n\r\n        {displayprojects.map((project)=>(\r\n\r\n            <div className=\"listed-project\" key={project._id}  >\r\n              <div className='listed-project-head'>\r\n                  <h3>{project.title}</h3>\r\n                  <p>{project.postedDate}</p>\r\n              </div>\r\n              <h5>Budget &#8377; {project.budget}</h5>\r\n              <h5>Client name: {project.clientName}</h5>\r\n              <h5>Client email: {project.clientEmail}</h5>\r\n              <p>{project.description}</p>\r\n              <div className=\"skills\">\r\n                {\r\n                  project.skills.map((skill)=>(\r\n                    <h6 key={skill} >{skill}</h6>\r\n                  ))\r\n                }\r\n              </div>\r\n\r\n              <div className=\"bids-data\">\r\n                <p>{project.bids.length} bids</p>\r\n                <h6>&#8377; {project.bids.length > 0 ? project.bidAmounts.reduce((accumulator, currentValue) => accumulator + currentValue, 0) : 0} (avg bid)</h6>\r\n              </div>\r\n              <h5>Status - {project.status}</h5>\r\n              <hr />\r\n            </div>\r\n        ))}\r\n\r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default AdminProjects","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\admin\\AllUsers.jsx",["162"],[],"import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport '../../styles/admin/allUsers.css'\r\n\r\nconst AllUsers = () => {\r\n\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const fetchUsers = async() =>{\r\n    await axios.get(\"http://localhost:6001/fetch-users\").then(\r\n      (response)=>{\r\n          setUsers(response.data);\r\n      }\r\n    ).catch((err)=>{\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  useEffect(()=>{\r\n    fetchUsers();\r\n  },[])\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"all-users-page\">\r\n\r\n      <h3>All Users</h3>\r\n\r\n      <div className=\"all-users\">\r\n\r\n        {users.map((user)=>(\r\n\r\n          <div className=\"user\">\r\n              <span>\r\n                <b>User Id</b>\r\n                <p>{user._id}</p>\r\n              </span>\r\n              <span>\r\n                <b>Username</b>\r\n                <p>{user.username}</p>\r\n              </span>\r\n              <span>\r\n                <b>Email</b>\r\n                <p>{user.email}</p>\r\n              </span>\r\n              <span>\r\n                <b>User Role</b>\r\n                <p>{user.usertype}</p>\r\n              </span>\r\n\r\n          </div>\r\n\r\n        ))}\r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AllUsers","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\admin\\AllApplications.jsx",["163"],[],"import React, { useEffect, useState } from 'react'\r\nimport '../../styles/admin/allApplications.css'\r\nimport axios from 'axios'\r\n\r\n{/* <h5><b>Freelancer Id: </b> {application.budget}</h5> */}\r\n\r\nconst AllApplications = () => {\r\n\r\n  const [applications, setApplications] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    fetchApplications();\r\n  },[])\r\n\r\n  const fetchApplications = async() =>{\r\n    await axios.get(\"http://localhost:6001/fetch-applications\").then(\r\n      (response)=>{\r\n        setApplications(response.data.reverse());\r\n        console.log(response.data);\r\n      }\r\n    ).catch((err)=>{\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"user-applications-page\">\r\n      \r\n      <h3>All Applications</h3>\r\n\r\n      <div className=\"user-applications-body\">\r\n\r\n      {applications.map((application)=>(\r\n\r\n          <div className=\"user-application\">\r\n\r\n                <div className=\"user-application-body\">\r\n\r\n                    <div className=\"user-application-half\">\r\n\r\n                      <h4>{application.title}</h4>\r\n                          <p>{application.description}</p>\r\n                          <span>\r\n                            <h5>Skills</h5>\r\n                            <div className=\"application-skills\">\r\n                              {application.requiredSkills.map((skill)=>(\r\n                                <p key={skill}>{skill}</p>\r\n                              ))}\r\n                            </div>\r\n                          </span>\r\n                          <h6>Budget - &#8377; {application.budget}</h6>\r\n                          <h5><b>Client: </b> {application.clientName}</h5>\r\n                          <h5><b>Client Id: </b> {application.clientId}</h5>\r\n                          <h5><b>Client email: </b> {application.clientEmail}</h5>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"vertical-line\"></div>\r\n\r\n                    <div className=\"user-application-half\"> \r\n\r\n                      <span>\r\n                          <h5>Proposal</h5>\r\n                          <p>{application.proposal}</p>\r\n                        </span>\r\n                        <span>\r\n                            <h5>Skills</h5>\r\n                            <div className=\"application-skills\">\r\n                            {application.freelancerSkills.map((skill)=>(\r\n                                <p key={skill} >{skill}</p>\r\n                              ))}\r\n                            </div>\r\n                        </span>\r\n                        <h6>Proposed Budget - &#8377; {application.bidAmount}</h6>\r\n                        <h5><b>Freelancer: </b> {application.freelancerName}</h5>\r\n                        <h5><b>Freelancer Id: </b> {application.freelancerId}</h5>\r\n                        <h5><b>Freelancer email: </b> {application.freelancerEmail}</h5>\r\n                        <h6>Status: <b style={application.status===\"Accepted\" ? {color: \"green\"} : {} } >{application.status}</b></h6>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                  <hr />\r\n                </div>\r\n      ))}\r\n      \r\n          \r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AllApplications","C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\pages\\admin\\Admin.jsx",[],[],"C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\components\\Register.jsx",[],[],"C:\\Users\\KAMALESHWARAN.S\\Desktop\\Freelance-MERN\\client\\src\\components\\Login.jsx",[],[],{"ruleId":"164","severity":1,"message":"165","line":1,"column":32,"nodeType":"166","messageId":"167","endLine":1,"endColumn":41},{"ruleId":"164","severity":1,"message":"165","line":1,"column":29,"nodeType":"166","messageId":"167","endLine":1,"endColumn":38},{"ruleId":"164","severity":1,"message":"168","line":1,"column":40,"nodeType":"166","messageId":"167","endLine":1,"endColumn":48},{"ruleId":"164","severity":1,"message":"169","line":9,"column":9,"nodeType":"166","messageId":"167","endLine":9,"endColumn":15},{"ruleId":"164","severity":1,"message":"170","line":3,"column":9,"nodeType":"166","messageId":"167","endLine":3,"endColumn":18},{"ruleId":"164","severity":1,"message":"171","line":4,"column":9,"nodeType":"166","messageId":"167","endLine":4,"endColumn":27},{"ruleId":"164","severity":1,"message":"172","line":5,"column":9,"nodeType":"166","messageId":"167","endLine":5,"endColumn":26},{"ruleId":"173","severity":1,"message":"174","line":16,"column":5,"nodeType":"175","endLine":16,"endColumn":7,"suggestions":"176"},{"ruleId":"164","severity":1,"message":"177","line":14,"column":21,"nodeType":"166","messageId":"167","endLine":14,"endColumn":33},{"ruleId":"173","severity":1,"message":"174","line":18,"column":5,"nodeType":"175","endLine":18,"endColumn":7,"suggestions":"178"},{"ruleId":"179","severity":1,"message":"180","line":26,"column":38,"nodeType":"181","messageId":"182","endLine":26,"endColumn":40},{"ruleId":"179","severity":1,"message":"180","line":27,"column":39,"nodeType":"181","messageId":"182","endLine":27,"endColumn":41},{"ruleId":"173","severity":1,"message":"183","line":62,"column":4,"nodeType":"175","endLine":62,"endColumn":20,"suggestions":"184"},{"ruleId":"173","severity":1,"message":"185","line":23,"column":5,"nodeType":"175","endLine":23,"endColumn":7,"suggestions":"186"},{"ruleId":"164","severity":1,"message":"187","line":55,"column":26,"nodeType":"166","messageId":"167","endLine":55,"endColumn":41},{"ruleId":"173","severity":1,"message":"188","line":110,"column":7,"nodeType":"175","endLine":110,"endColumn":9,"suggestions":"189"},{"ruleId":"173","severity":1,"message":"188","line":125,"column":7,"nodeType":"175","endLine":125,"endColumn":15,"suggestions":"190"},{"ruleId":"173","severity":1,"message":"174","line":16,"column":5,"nodeType":"175","endLine":16,"endColumn":7,"suggestions":"191"},{"ruleId":"164","severity":1,"message":"192","line":32,"column":10,"nodeType":"166","messageId":"167","endLine":32,"endColumn":23},{"ruleId":"164","severity":1,"message":"193","line":32,"column":25,"nodeType":"166","messageId":"167","endLine":32,"endColumn":41},{"ruleId":"164","severity":1,"message":"194","line":17,"column":10,"nodeType":"166","messageId":"167","endLine":17,"endColumn":18},{"ruleId":"164","severity":1,"message":"195","line":18,"column":10,"nodeType":"166","messageId":"167","endLine":18,"endColumn":19},{"ruleId":"173","severity":1,"message":"185","line":25,"column":5,"nodeType":"175","endLine":25,"endColumn":7,"suggestions":"196"},{"ruleId":"173","severity":1,"message":"197","line":43,"column":5,"nodeType":"175","endLine":43,"endColumn":7,"suggestions":"198"},{"ruleId":"173","severity":1,"message":"188","line":95,"column":5,"nodeType":"175","endLine":95,"endColumn":7,"suggestions":"199"},{"ruleId":"173","severity":1,"message":"188","line":110,"column":5,"nodeType":"175","endLine":110,"endColumn":13,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":154,"column":33,"nodeType":"203","messageId":"204","endLine":154,"endColumn":80,"fix":"205"},{"ruleId":"201","severity":1,"message":"202","line":159,"column":33,"nodeType":"203","messageId":"204","endLine":159,"endColumn":78,"fix":"206"},{"ruleId":"179","severity":1,"message":"180","line":30,"column":37,"nodeType":"181","messageId":"182","endLine":30,"endColumn":39},{"ruleId":"173","severity":1,"message":"207","line":32,"column":5,"nodeType":"175","endLine":32,"endColumn":19,"suggestions":"208"},{"ruleId":"164","severity":1,"message":"209","line":63,"column":10,"nodeType":"166","messageId":"167","endLine":63,"endColumn":23},{"ruleId":"164","severity":1,"message":"210","line":63,"column":25,"nodeType":"166","messageId":"167","endLine":63,"endColumn":41},{"ruleId":"164","severity":1,"message":"211","line":8,"column":9,"nodeType":"166","messageId":"167","endLine":8,"endColumn":17},{"ruleId":"164","severity":1,"message":"177","line":14,"column":21,"nodeType":"166","messageId":"167","endLine":14,"endColumn":33},{"ruleId":"173","severity":1,"message":"174","line":18,"column":5,"nodeType":"175","endLine":18,"endColumn":7,"suggestions":"212"},{"ruleId":"179","severity":1,"message":"180","line":26,"column":38,"nodeType":"181","messageId":"182","endLine":26,"endColumn":40},{"ruleId":"179","severity":1,"message":"180","line":27,"column":39,"nodeType":"181","messageId":"182","endLine":27,"endColumn":41},{"ruleId":"173","severity":1,"message":"183","line":62,"column":4,"nodeType":"175","endLine":62,"endColumn":20,"suggestions":"213"},{"ruleId":"164","severity":1,"message":"214","line":2,"column":10,"nodeType":"166","messageId":"167","endLine":2,"endColumn":21},{"ruleId":"215","severity":1,"message":"216","line":5,"column":1,"nodeType":"217","messageId":"218","endLine":5,"endColumn":61},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'userId' is assigned a value but never used.","'PiStudent' is defined but never used.","'FaHandHoldingWater' is defined but never used.","'MdHealthAndSafety' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchProjects'. Either include it or remove the dependency array.","ArrayExpression",["219"],"'setAllSkills' is assigned a value but never used.",["220"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'projects'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDisplayProjects' needs the current value of 'projects'.",["221"],"React Hook useEffect has missing dependencies: 'joinSocketRoom' and 'params'. Either include them or remove the dependency array.",["222"],"'setFreelancerId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchChats'. Either include it or remove the dependency array.",["223"],["224"],["225"],"'filterProject' is assigned a value but never used.","'setFilterProject' is assigned a value but never used.","'clientId' is assigned a value but never used.","'projectId' is assigned a value but never used.",["226"],"React Hook useEffect has a missing dependency: 'params'. Either include it or remove the dependency array.",["227"],["228"],["229"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"230","text":"231"},{"range":"232","text":"231"},"React Hook useEffect has a missing dependency: 'projectTitles'. Either include it or remove the dependency array. You can also do a functional update 'setProjectTitles(p => ...)' if you only need 'projectTitles' in the 'setProjectTitles' call.",["233"],"'projectFilter' is assigned a value but never used.","'setProjectFilter' is assigned a value but never used.","'navigate' is assigned a value but never used.",["234"],["235"],"'useNavigate' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",{"desc":"236","fix":"237"},{"desc":"236","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"236","fix":"247"},{"desc":"241","fix":"248"},{"desc":"249","fix":"250"},{"desc":"243","fix":"251"},{"desc":"245","fix":"252"},[4029,4029]," rel=\"noreferrer\"",[4269,4269],{"desc":"253","fix":"254"},{"desc":"236","fix":"255"},{"desc":"239","fix":"256"},"Update the dependencies array to be: [fetchProjects]",{"range":"257","text":"258"},{"range":"259","text":"258"},"Update the dependencies array to be: [categoryFilter, projects]",{"range":"260","text":"261"},"Update the dependencies array to be: [joinSocketRoom, params]",{"range":"262","text":"263"},"Update the dependencies array to be: [fetchChats]",{"range":"264","text":"265"},"Update the dependencies array to be: [fetchChats, socket]",{"range":"266","text":"267"},{"range":"268","text":"258"},{"range":"269","text":"263"},"Update the dependencies array to be: [params]",{"range":"270","text":"271"},{"range":"272","text":"265"},{"range":"273","text":"267"},"Update the dependencies array to be: [applications, projectTitles]",{"range":"274","text":"275"},{"range":"276","text":"258"},{"range":"277","text":"261"},[404,406],"[fetchProjects]",[461,463],[1592,1608],"[categoryFilter, projects]",[530,532],"[joinSocketRoom, params]",[3003,3005],"[fetchChats]",[3364,3372],"[fetchChats, socket]",[394,396],[673,675],[1023,1025],"[params]",[2318,2320],[2653,2661],[1132,1146],"[applications, projectTitles]",[463,465],[1594,1610]]